<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/util 
		http://www.springframework.org/schema/util/spring-util-3.1.xsd">

	<beans:import resource="spring-http-security.xml" />
	
	<authentication-manager alias="authenticationManager" erase-credentials="false">
				<authentication-provider user-service-ref="userAuthorizationService">
				 <password-encoder ref="bcryptEncoder">
     			 </password-encoder>
				</authentication-provider>
			</authentication-manager>
		
  	<beans:bean id="bcryptEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" ></beans:bean>
 
    <beans:bean id="userAuthorizationService" class="com.pms.web.service.security.AuthorizedUserDetailServiceImpl" ></beans:bean>	
</beans:beans>
			
<!-- <jdbc-user-service data-source-ref="dataSource" 
		
			users-by-username-query="SELECT email_id, password, case ENABLED when 1 then 'TRUE' else 'FALSE' END  ENABLED
			     FROM pm_users
		         WHERE EMAIL_ID=?"
		
			authorities-by-username-query="
		        SELECT u.email_id, r.role_name FROM pm_users u, pm_role r, pm_user_role ur
		        WHERE u.user_id = ur.user_id and ur.role_id=r.role_id
		        AND u.email_id=?" /> -->